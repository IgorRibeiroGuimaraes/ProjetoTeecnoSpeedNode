generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Banco {
  id         Int                @id @default(autoincrement())
  nome       String             @db.VarChar(255)
  padroesVan BancosPadroesVan[]
  cnabs      BancosCnabs[]
  produtos   BancosProdutos[]
  cartasVan  CartaVan[]
}

model PadraoVan {
  id        Int                @id @default(autoincrement())
  descricao String             @unique @db.VarChar(100)
  bancos    BancosPadroesVan[]
}

model BancosPadroesVan {
  id          Int @id @default(autoincrement())
  bancoId     Int
  padraoVanId Int

  banco     Banco     @relation(fields: [bancoId], references: [id], onDelete: Cascade)
  padraoVan PadraoVan @relation(fields: [padraoVanId], references: [id], onDelete: Cascade)

  @@unique([bancoId, padraoVanId])
}

model TipoCnab {
  id          Int           @id @default(autoincrement())
  descricao   String        @unique @db.VarChar(100) // Nome do tipo de CNAB (ex.: CNAB240, CNAB400)
  bancosCnabs BancosCnabs[]
  cartasVan   CartaVan[] // Relação inversa com CartaVan
}

model BancosCnabs {
  id      Int @id @default(autoincrement())
  bancoId Int
  cnabId  Int

  banco    Banco    @relation(fields: [bancoId], references: [id], onDelete: Cascade)
  tipoCnab TipoCnab @relation(fields: [cnabId], references: [id], onDelete: Cascade)

  @@unique([bancoId, cnabId]) // Garante que não haja duplicidade na relação entre banco e CNAB
}

model Produto {
  id        Int              @id @default(autoincrement())
  nome      String           @db.VarChar(255) // Nome do produto
  descricao String           @unique @db.VarChar(255)
  bancos    BancosProdutos[]
}

model BancosProdutos {
  id        Int @id @default(autoincrement())
  bancoId   Int
  produtoId Int

  banco   Banco   @relation(fields: [bancoId], references: [id], onDelete: Cascade)
  produto Produto @relation(fields: [produtoId], references: [id], onDelete: Cascade)

  @@unique([bancoId, produtoId])
}

model CartaVan {
  id               Int      @id @default(autoincrement())
  cnpjEmitente     String   @db.VarChar(14)
  razaoSocial      String
  nomeResponsavel  String
  cargoResponsavel String
  telefone         String   @db.VarChar(15)
  email            String
  bancoId          Int
  tipoCnabId       Int // Relaciona com o TipoCnab
  agencia          String
  agenciaDV        String?
  conta            Int
  contaDV          Int
  convenio         String
  nomeGerente      String
  telefoneGerente  String   @db.VarChar(15)
  emailGerente     String
  createdAt        DateTime @default(now())

  banco    Banco    @relation(fields: [bancoId], references: [id], onDelete: Cascade)
  tipoCnab TipoCnab @relation(fields: [tipoCnabId], references: [id], onDelete: Cascade)
}
